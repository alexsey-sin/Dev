Сортируем данные

Итоговые данные обычно представляют в определённом порядке. Чтобы сортировать
данные по указанным полям, применяют команду ORDER BY (англ. order by,
«упорядочить по»).

Формат запроса с группировкой и сортировкой:

	SELECT 
		поле_1, 
		поле_2,
		..., 
		поле_n, 
		АГРЕГИРУЮЩАЯ_ФУНКЦИЯ(поле) AS here_you_are
	FROM
		таблица
	WHERE -- если нужно
		условие
	GROUP BY  
		поле_1, 
		поле_2, 
		..., 
		поле_n,
	ORDER BY -- если необходимо, перечисляем только те поля, 
	--по которым хотим отсортировать таблицу
		поле_1, 
		поле_2, 
		..., 
		поле_n, 
		here_you_are; 

В отличие от GROUP BY, в блоке с командой ORDER BY перечисляем только те поля,
по которым хотим сортировать. 

У команды ORDER BY два аргумента. Они отвечают за порядок сортировки в столбцах:

    ASC (от англ. ascending, «восходящий») сортирует данные в порядке возрастания.
		Это аргумент ORDER BY по умолчанию.
    DESC (от англ. descending, «нисходящий») сортирует данные по убыванию.

Аргументы команды ORDER BY указывают сразу после поля, по которому сортировали
данные:

	ORDER BY 
		название_поля DESC
	-- сортируем данные по убыванию 

	ORDER BY 
		название_поля ASC
	-- сортируем данные по возрастанию 

id	Name	genre	author	date_pub	pages	price	rating
1	Капитанская дочка	5	Александр Пушкин	1836-01-01	130	150	4.7
2	Отцы и дети	1	Иван Тургенев	1861-01-01	240	207	4.7
3	Вишнёвый сад	7	Антон Чехов	1903-01-01	60	138	4.4
4	Война и мир	1	Лев Толстой	1869-01-01	1274	
5	Анна Каренина	1	Лев Толстой	1878-01-01	1000	126	4.6
6	Цветы для Элджернона	4	Дэниел Киз	1959-01-01	250	280	4.7
7	Похороните меня за плинтусом...	5	Павел Санаев	1994-01-01	184	198	4.1
8	Зелёная миля	9	Стивен Кинг	1996-01-01	420	190	4.8
9	Унесённые ветром	1	Маргарет Митчелл	1936-01-01	624	358	
10	Три товарища	1	Эрих Мария Ремарк	1929-01-01	470	196	4.7
11	На Западном фронте без перемен	4	Эрих Мария Ремарк	1945-01-01	200	273	4.6
12	Триумфальная арка	1	Эрих Мария Ремарк	1956-01-01	520	220	4.7
13	Чёрный обелиск	1	Эрих Мария Ремарк	1961-01-01	480	420	4.6
14	Ночь в Лиссабоне	1	Эрих Мария Ремарк	1959-01-01	250	187	4.7
15	Жизнь взаймы	1	Эрих Мария Ремарк	1927-01-01	240	240	4.6
16	Станция на горизонте	1	Эрих Мария Ремарк	1830-01-01	210		4.1
17	Евгений Онегин	1	Александр Пушкин	1820-01-01	736	330	4.7

Посчитаем количество книг каждого автора и отсортируем данные:

	SELECT 
		author, 
		COUNT(name) AS cnt
	FROM
		books
	GROUP BY
		author 
	ORDER BY 
		cnt; 

author	cnt
Антон Чехов	1
Дэниел Киз	1
Иван Тургенев	1
Маргарет Митчелл	1
Павел Санаев	1
Стивен Кинг	1
Александр Пушкин	2
Лев Толстой	2
Эрих Мария Ремарк	7

Мы не указали аргумента для ORDER BY, и данные отсортировались по умолчанию
— в порядке возрастания количества книг.

	Добавим аргумент DESC: 

	SELECT 
		author, 
		COUNT(name) AS cnt
	FROM
		books
	GROUP BY
		author 
	ORDER BY 
		cnt DESC;

author	cnt
Эрих Мария Ремарк	7
Александр Пушкин	2
Лев Толстой	2
Антон Чехов	1
Дэниел Киз	1
Иван Тургенев	1
Маргарет Митчелл	1
Павел Санаев	1
Стивен Кинг	1

Сразу видно, какого автора предпочитает составитель таблицы! Аргумент DESC вывел
данные в порядке убывания.

Команда LIMIT (англ. «предел») ограничивает количество строк в выводе.
Её всегда указывают последней в запросе:

	SELECT 
		поле_1, 
		поле_2, 
		..., 
		поле_n, 
		АГРЕГИРУЮЩАЯ_ФУНКЦИЯ(поле) AS here_you_are
	FROM
		таблица
	WHERE -- если необходимо
		условие
	GROUP BY  
		поле_1, 
		поле_2, 
		..., 
		поле_n,
	ORDER BY -- если необходимо, перечисляем только те поля, 
	--по которых хотим отсортировать таблицу
		поле_1, 
		поле_2, 
		..., 
		поле_n, 
		here_you_are
	LIMIT -- если необходимо
		n;
	-- n-максимальное количество строк, которое вернёт такой запрос

После LIMIT указывают требуемое число строк — n. Удобнее строить рейтинг из
ограниченного числа элементов.

Например, выведем топ-3 книг по количеству страниц:

	SELECT 
		name, 
		pages
	FROM
		books
	ORDER BY
		pages DESC
	LIMIT 
		3;

name	pages
Война и мир	1274
Анна Каренина	1000
Евгений Онегин	736

Многие читали Толстого так: «Войну читаю, мир пропускаю». Или наоборот.
Не пытайтесь повторить этот трюк в Практикуме — теория и задачи здесь одинаково
важны.

===============================================================================
Тренажер

Задача 1/3:

Напишите запрос, который на дату '2019-06-05' посчитает количество товаров в
каждой категории (category). Назовите переменную name_cnt и отсортируйте данные
по возрастанию количества товаров. Назовите выбранную дату update_date. Выведите
дату (update_date), категорию (category), количество товаров (name_cnt).

Обратите внимание, что дату нужно перевести из строкового типа в date.

Подсказка:

Приведите date_upd к типу date конструкцией date_upd::date и назовите полученное
поле update_date. Выполните группировку по category и update_date. Отсортируйте
по возрастанию по полю name_cnt.

	SELECT 
		MAX(date_upd) AS update_date,
		category,
		COUNT(name) AS name_cnt
	FROM
		products_data_all
	WHERE
		CAST(date_upd AS date) = '2019-06-05'
	GROUP BY 
		category
	ORDER BY 
		name_cnt

Задача 2/3:

Напишите запрос, который посчитает количество уникальных продуктов в каждой
категории в магазине 'Lentro' на '2019-06-30'. Назовите переменную
uniq_name_cnt и отсортируйте данные по убыванию этого поля. Приведите дату
к формату date и назовите поле update_date. Выведите дату, название магазина,
название категории, количество уникальных продуктов.

Подсказка:

Преобразуйте поле date_upd в формат date, и сохраните в update_date.
Выполните группировку по полям даты (update_date), названию магазина (name_store)
и категории (category).

Командой ORDER BY с аргументом desc отсортируйте данные в порядке убывания
количества уникальных продуктов uniq_name_cnt.

	SELECT
		MAX(CAST(date_upd AS date)) AS update_date,
		name_store,
		category,
		COUNT(DISTINCT name) AS uniq_name_cnt
	FROM
		products_data_all
	WHERE 
		name_store = 'Lentro' AND
		CAST(date_upd AS date) = '2019-06-30'
	GROUP BY 
		category,
		name_store
	ORDER BY 
		uniq_name_cnt DESC

Задача 3/3:

Напишите запрос, который выведет топ-5 самых дорогих продуктов, отсортированных
по убыванию. Выведите название продукта и стоимость. Сгруппируйте данные по столбцу
name. Дайте переменной имя max_price.

Подсказка:

Примените агрегирующую функцию MAX() к полю с ценой price. Результирующую
переменную назовите max_price. Сгруппируйте данные по названию продукта — name.

Отсортируйте max_price по убыванию, указав в блоке LIMIT число 5.

	SELECT 
		name,
		MAX(price) AS max_price
	FROM
		products_data_all
	GROUP BY 
		name
	ORDER BY 
		max_price DESC
	LIMIT 5
===============================================================================
