Обработка данных в группировке

Вы уже умеете группировать по нескольким полям конструкцией GROUP BY.

Что если нужно сразу вывести авторов, у которых в таблицу попало больше
одной книги? Для таких целей есть конструкция HAVING (англ. «обладающий»).

Пример формата запроса с конструкцией HAVING: 

	SELECT 
		поле_1, 
		поле_2, 
		..., 
		поле_n, 
		АГРЕГИРУЮЩАЯ_ФУНКЦИЯ(поле) AS here_you_are
	FROM
		TABLE
	WHERE -- если необходимо
		условие
	GROUP BY 
		поле_1, 
		поле_2, 
		..., 
		поле_n
	HAVING
		АГРЕГИРУЮЩАЯ_ФУНКЦИЯ(поле_для_группировки) > n
	ORDER BY -- если необходимо, перечисляем только те поля, 
	--по которых хотим отсортировать таблицу
		поле_1, 
		поле_2, 
		..., 
		поле_n,
		here_you_are
	LIMIT -- если необходимо
		n;

В результирующую выборку попадут только те строки, для которых результат
агрегирующей функции соответствует условию блоков HAVING и WHERE.

Если команды HAVING и WHERE так похожи, почему нельзя записать все условия
в одной из них? Дело в том, что WHERE отрабатывает перед группировкой данных
и расчётом агрегирующей функции. Потому задать фильтр на результат агрегирующей
функции в WHERE нельзя. И здесь выручает HAVING. 

Таблица с книгами:

id	Name	genre	author	date_pub	pages	price	rating
1	Капитанская дочка	5	Александр Пушкин	1836-01-01	130	150	4.7
2	Отцы и дети	1	Иван Тургенев	1861-01-01	240	207	4.7
3	Вишнёвый сад	7	Антон Чехов	1903-01-01	60	138	4.4
4	Война и мир	1	Лев Толстой	1869-01-01	1274	
5	Анна Каренина	1	Лев Толстой	1878-01-01	1000	126	4.6
6	Цветы для Элджернона	4	Дэниел Киз	1959-01-01	250	280	4.7
7	Похороните меня за плинтусом...	5	Павел Санаев	1994-01-01	184	198	4.1
8	Зелёная миля	9	Стивен Кинг	1996-01-01	420	190	4.8
9	Унесённые ветром	1	Маргарет Митчелл	1936-01-01	624	358	
10	Три товарища	1	Эрих Мария Ремарк	1929-01-01	470	196	4.7
11	На Западном фронте без перемен	4	Эрих Мария Ремарк	1945-01-01	200	273	4.6
12	Триумфальная арка	1	Эрих Мария Ремарк	1956-01-01	520	220	4.7
13	Чёрный обелиск	1	Эрих Мария Ремарк	1961-01-01	480	420	4.6
14	Ночь в Лиссабоне	1	Эрих Мария Ремарк	1959-01-01	250	187	4.7
15	Жизнь взаймы	1	Эрих Мария Ремарк	1927-01-01	240	240	4.6
16	Станция на горизонте	1	Эрих Мария Ремарк	1830-01-01	210		4.1
17	Евгений Онегин	1	Александр Пушкин	1820-01-01	736	330	4.7

Вернёмся к задаче с авторами. Выберем только тех, у кого больше одной книги: 

	SELECT 
		author, 
		COUNT(name) AS name_cnt
	FROM
		books
	GROUP BY 
		author
	HAVING 
		COUNT(name) > 1 
	ORDER BY 
		name_cnt DESC;

author	name_cnt
Эрих Мария Ремарк	7
Александр Пушкин	2
Лев Толстой	2

Обратите внимание на порядок команд:

1) GROUP BY;
2) HAVING;
3) ORDER BY.

Указывайте команды строго в этой последовательности, иначе запрос не выполнится.

===============================================================================
Тренажер

Задача 1/3:

Напишите запрос, который для каждого продукта найдёт максимальную стоимость.
Сохраните её в переменной max_price. Выведите продукты и максимальную цену тех,
чья стоимость больше 500 рублей.

Подсказка:

Выберите названия продуктов (name). Примените агрегирующую функцию MAX() к полю
price. Выполните группировку по названию товара. После HAVING напишите
MAX(price) > 500.

	SELECT 
		name,
		MAX(price) AS max_price
	FROM
		products_data_all
	GROUP BY
		name
	HAVING
		MAX(price) > 500

Задача 2/3:

Напишите запрос, который посчитает на '2019-06-03' для каждого магазина
(name_store) количество товаров с весом больше 900 г (weight). Сохраните
количество товаров в переменной name_cnt, а приведённую к нужному типу дату
— в update_date.

Выведите дату, название магазина и количество товаров только таких магазинов,
в которых количество товаров меньше 10.

Напомним, что вес товара нужно привести к типу real, и выбрать только те продукты,
единицы измерения которых — граммы (units = 'г').

Подсказка:

Приведите date_upd к формату date и weight — к real. В HAVING напишите условие
на ограничение COUNT(name) < 10. Сгруппируйте данные по update_date и name_store.
В WHERE поставьте ограничение на дату и вес из условия задачи.

	SELECT 
		CAST(date_upd AS date) AS update_date,
		name_store,
		COUNT(name) AS name_cnt
	FROM
		products_data_all
	WHERE
		CAST(date_upd AS date) = '2019-06-03'
		AND units = 'г'
		AND CAST(weight AS real) > 900
	GROUP BY
		name_store,
		date_upd
	HAVING
		COUNT(name) < 10

Задача 3/3:

Напишите запрос, который посчитает количество уникальных продуктов для каждого
магазина (name_store). Назовите переменную name_uniq_cnt. Найдите три магазина,
в которых число уникальных товаров наименьшее, но более тридцати. Выведите название
каждого магазина и количество уникальных товаров в нём.

Подсказка:

Найдите число уникальных продуктов конструкцией COUNT(DISTINCT name). В блоке LIMIT
укажите 3.

	SELECT 
		name_store,
		COUNT(DISTINCT name) AS name_uniq_cnt
	FROM
		products_data_all
	GROUP BY
		name_store
	HAVING 
		COUNT(DISTINCT name) > 30
	ORDER BY
		name_uniq_cnt
	LIMIT 3
===============================================================================
