Группируем данные

Представим, что есть такая таблица:

id	Name	genre	author	date_pub	pages	price	rating
1	Капитанская дочка	5	Александр Пушкин	1836-01-01	130	150	4.7
2	Отцы и дети	1	Иван Тургенев	1861-01-01	240	207	4.7
3	Вишнёвый сад	7	Антон Чехов	1903-01-01	60	138	4.4
4	Война и мир	1	Лев Толстой	1869-01-01	1274	
5	Анна Каренина	1	Лев Толстой	1878-01-01	1000	126	4.6
6	Цветы для Элджернона	4	Дэниел Киз	1959-01-01	250	280	4.7
7	Похороните меня за плинтусом...	5	Павел Санаев	1994-01-01	184	198	4.1
8	Зелёная миля	9	Стивен Кинг	1996-01-01	420	190	4.8
9	Унесённые ветром	1	Маргарет Митчелл	1936-01-01	624	358	
10	Три товарища	1	Эрих Мария Ремарк	1929-01-01	470	196	4.7
11	На Западном фронте без перемен	4	Эрих Мария Ремарк	1945-01-01	200	273	4.6
12	Триумфальная арка	1	Эрих Мария Ремарк	1956-01-01	520	220	4.7
13	Чёрный обелиск	1	Эрих Мария Ремарк	1961-01-01	480	420	4.6
14	Ночь в Лиссабоне	1	Эрих Мария Ремарк	1959-01-01	250	187	4.7
15	Жизнь взаймы	1	Эрих Мария Ремарк	1927-01-01	240	240	4.6
16	Станция на горизонте	1	Эрих Мария Ремарк	1830-01-01	210		4.1
17	Евгений Онегин	1	Александр Пушкин	1820-01-01	736	330	4.7

Так подсчитали количество книг, написанных Ремарком:

	SELECT 
		COUNT(name) AS cnt
	FROM
		books
	WHERE
		author = 'Эрих Мария Ремарк';

	7

Как найти число книг каждого автора? Не писать же несколько запросов! Хорошо бы
автоматически перебирать авторов, и сразу же считать количество их произведений.
Для этого есть группировка.

Команду GROUP BY (англ. «группировать по») применяют, когда данные нужно разделить
на группы по значениям полей.

Пример формата запроса с агрегирующей функцией и группировкой: 

	 SELECT 
		поле_1, 
		поле_2, 
		..., 
		поле_n, 
		АГРЕГИРУЮЩАЯ_ФУНКЦИЯ(поле) AS here_you_are
	FROM
		таблица
	WHERE -- если необходимо
		условие 
	GROUP BY 
		поле_1, 
		поле_2, 
		..., 
		поле_n;

После команды GROUP BY перечисляют все поля из блока SELECT. Саму агрегирующую
функцию включать в блок GROUP BY не нужно — с ней запрос не выполнится.

Вернёмся к примеру. В нашем случае агрегирующая функция — COUNT(). Команда GROUP BY
поможет найти количество строк в разрезе авторов:

	SELECT 
		author, 
		COUNT(name) AS cnt
	FROM
		books
	GROUP BY 
		author;

	author	cnt
	Александр Пушкин	2
	Антон Чехов	1
	Дэниел Киз	1
	Иван Тургенев	1
	Лев Толстой	2
	Маргарет Митчелл	1
	Павел Санаев	1
	Стивен Кинг	1
	Эрих Мария Ремарк	7

Теперь мы знаем, сколько книг написал каждый из авторов таблицы.

Подсчитаем количество книг в разрезе авторов и рейтинга: 

	SELECT 
		author, 
		rating, 
		COUNT(name) AS cnt
	FROM
		books
	GROUP BY 
		author, 
		rating;

	author	rating	cnt
	Лев Толстой		1
	Маргарет Митчелл		1
	Павел Санаев	4.1	1
	Эрих Мария Ремарк	4.1	1
	Антон Чехов	4.4	1
	Лев Толстой	4.6	1
	Эрих Мария Ремарк	4.6	3
	Александр Пушкин	4.7	2
	Дэниел Киз	4.7	2

Эта конструкция вернула таблицу с количеством книг и их рейтингом определённого
автора. Например, Эрих Мария Ремарк написал три книги с рейтингом 4.6, одну
— с оценкой 4.1 и три с 4.7. А у Льва Толстого одно произведение с 4.6 баллами
рейтинга и одно — вовсе без оценки.

Конструкция GROUP BY работает для всех агрегирующих функций: COUNT(), AVG(), SUM(),
MAX(), MIN(). Можно вызывать несколько функций сразу. Например, для каждого автора
найдём среднее количество страниц в его произведениях и максимальное количество
страниц:

	SELECT 
		author, 
		AVG(pages) AS avg_pages,
		MAX(pages) AS max_pages
	FROM
		books
	GROUP BY 
		author;

	author	avg_pages	max_pages
	Александр Пушкин	433	736
	Антон Чехов	60	60
	Дэниел Киз	250	250
	Иван Тургенев	240	240
	Лев Толстой	1137	1274
	Маргарет Митчелл	624	624
	Павел Санаев	184	184
	Стивен Кинг	420	420
	Эрих Мария Ремарк	338,571428571429	520

===============================================================================
Тренажер

Задача 1/4:

Напишите запрос, который посчитает общее и количество уникальных продуктов в
каждом магазине (name_store), информация о котором есть в таблице products_data_all.
Назовите переменные name_cnt, name_uniq_cnt соответственно. Выведите название
магазина, общее количество продуктов, количество уникальных продуктов.

Подсказка:

Примените GROUP BY к полю name_store.

	SELECT 
		name_store,
		COUNT(name) AS name_cnt,
		COUNT(DISTINCT name) AS name_uniq_cnt
	FROM
		products_data_all
	GROUP BY
		name_store

Задача 2/4:

Напишите запрос, который подсчитает значение максимального веса в каждой категории
(category). Назовите переменную max_weight. Выведите категорию и максимальный вес.

Подсказка:

Примените GROUP BY к полю category. Внутри агрегирующей функции приведите вес
(weight) к типу real.

	SELECT
		category,
		MAX(CAST(weight AS real)) AS max_weight
	FROM
		products_data_all
	GROUP BY 
		category

Задача 3/4:

Напишите запрос, который посчитает среднюю, максимальную и минимальную цены
(price) товаров для каждого магазина (name_store) в таблице products_data_all.
Назовите переменные соответственно average_price, max_price, min_price.

Выведите название магазина, среднюю, максимальную и минимальную цены.

Подсказка:

Примените функции AVG(), MAX(), MIN() к полю price.
Сгруппируйте данные по полю name_store.

	SELECT 
		name_store,
		AVG(CAST(price AS real)) AS average_price,
		MAX(CAST(price AS real)) AS max_price,
		MIN(CAST(price AS real)) AS min_price
	FROM
		products_data_all
	GROUP BY
		name_store

Задача 4/4:

Напишите запрос, который посчитает разницу между максимальной и минимальной
ценой каждого продукта в категории 'масло сливочное и маргарин'
на 10 июня 2019 года. Назовите переменную max_min_diff. Переведите строковые
значения дат в формат даты.

Выведите название продукта, разницу между максимальной и минимальной ценой.

Напомним названия нужных вам столбцов:

Название продукта — поле name Категория — поле category
Дата — поле date_upd
Цена — поле price.

Подсказка:

Примените функции MAX() и MIN() к полю price. Найдите разницу между результатами
их вычислений и сохраните её в переменной max_min_diff. Сделайте срез по категории
category = 'масло сливочное и маргарин' и по дате date_upd :: date = '2019-06-10'.
Сгруппируйте данные по названию продукта (name).

	SELECT 
		name,
		MAX(price) - MIN(price) AS max_min_diff
	FROM
		products_data_all
	WHERE
		category = 'масло сливочное и маргарин'
		AND CAST(date_upd AS date) = '2019-06-10'
	GROUP BY
		name
===============================================================================
