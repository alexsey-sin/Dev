Окружение Django-проекта: Git

Цели ясны, задачи определены — за работу.

В работе с Django вам поможет старая знакомая из вводной части — Анфиса.
В течение курса она научится работать с полноценной базой данных, начнёт
применять язык шаблонов и другие полезные штуки. В ходе последующих спринтов
вы будете писать собственный проект Yatube, и код Анфисы поможет вам разобраться
с деталями: вы сможете развернуть готовый проект Anfisaforfriends на своём
компьютере, запустить его и посмотреть, как устроена поумневшая Анфиса.

Проект Yatube, над которым вы будете работать, станет частью вашего портфолио,
и потенциальный работодатель сможет его увидеть и оценить ваши навыки.
Лучший способ опубликовать портфолио — разместить код на публичном сервере GitHub.

    На GitHub вы создадите «репозиторий», директорию для проекта. В ней будут
	автоматически созданы служебные файлы.
    
	Вы клонируете проект с удалённого сервера на свой компьютер: на вашем
	компьютере будет создана точно такая же директория, как на сервере.
	Эти директории будут синхронизироваться между собой, а Git будет хранить
	всю историю изменений проекта.

Создание git-репозитория для Yatube

Перейдите на сайт https://github.com/ и авторизуйтесь в личном кабинете,
аккаунт вы создали некоторое время назад.

Если вы самостоятельно не создавали никаких репозиториев — в вашем аккаунте
должны быть две папки: backend_test_homework и hw_python_oop.

Такая папка с проектом на гитхабе называется репозиторий
(англ. repository — хранилище); на сленге разработчиков — «репа».

Создайте новый репозиторий: для этого на главной странице в левом верхнем углу
есть кнопка new.

Нажмите кнопку new, и появится форма с такими полями:

    Repository name — имя репозитория, назовите его yatube_project.
    
	Description — описание проекта. Мы будем разрабатывать платформу для блогов,
	так что можно написать, например, «Социальная сеть блогеров».
    
	Public/Private — тип репозитория: публичный или приватный.
	На время прохождения курса установите «приватный», репозиторий будет
	доступен только вам. По завершении проекта вы сможете самостоятельно
	изменить тип на «публичный»: это даст возможность другим разработчикам
	познакомиться с вашим репозиторием.
    
	Initialize this repository with a README — создать файл README в репозитории.
	Включите эту опцию: в файле README вы опишете проект.
    
	Add .gitignore — создать .gitignore, файл, где будут перечислены файлы и
	папки вашего репозитория, которые Git не должен отслеживать и синхронизировать.
	Укажите пункт Python. Автоматически будет создан гитингор-файл,
	стандартно настроенный для любого Python-проекта. В дальнейшем этот файл
	можно будет отредактировать.
    
	Add license — добавить лицензию. В лицензии вы устанавливаете права на свой
	проект. Мы рекомендуем указать лицензию BSD 3 или MIT: они предоставляют
	хороший баланс прав и ответственности.

Клонирование репозитория на компьютер

Скопируйте ссылку на свой репозиторий, она понадобится для клонирования проекта.

У Остапа Бендера было четыреста сравнительно честных способов отъёма денег
у населения. У вас есть по меньшей мере два варианта клонирования.
Выберите тот, который вам больше понравится.

Способ 1: я же разработчик!

Откройте окно терминала Git Bash (в OS Windows встроенная командная строка
powershell может работать не так, как ожидалось. Используйте Git Bash).
Перейдите в директорию с вашими проектами /Dev — вы создали её в предыдущих уроках.

Выполните команду клонирования. Репозиторий будет клонирован в ту директорию,
откуда выполнена команда (в директорию /Dev, если вы всё сделаете правильно).

Под Windows выполните в терминале такие команды:

	# Перейдите в рабочую директорию Dev
	# Возможно, на вашем компьютере адрес немного иной
	$ cd D:\Dev\
	# Клонируйте репозиторий с сайта Github.
	# После git clone вставьте ссылку, которую вы скопировали на GitHub
	$ git clone https://github.com/your_name/yatube_project.git 

Под macOS или Linux:

	# Перейдите в рабочую директорию:
	$ cd ~/Dev/
	# Клонируйте репозиторий с сайта Github
	# После git clone вставьте ссылку, которую вы скопировали на GitHub
	$ git clone https://github.com/your_name/yatube_project.git 

После выполнения этих команд в терминале появятся сообщения:

	Cloning into 'yatube_project.git'...
	remote: Enumerating objects: 5, done.
	remote: Counting objects: 100% (5/5), done.
	remote: Compressing objects: 100% (5/5), done.
	remote: Total 5 (delta 0), reused 0 (delta 0), pack-reused 0
	Unpacking objects: 100% (5/5), 2.30 KiB | 785.00 KiB/s, done. 

На вашем компьютере создастся директория Dev/yatube_project с файлами

    LICENSE
    README.md
    .gitignore
    .git

Папка Dev/yatube_project — это **корневая директория проекта Yatube.

Способ 2: у меня же есть VSC с консолью!
Откройте и настройте встроенный терминал VSC

    Откройте редактор Visual Studio Code.
    Запустите встроенный терминал: в главном меню выберите Terminal → New terminal
    Проверьте, какой терминал запущен. Нам нужен bash.

Пользователи Windows, внимание!
В ОС Windows может быть установлено несколько разных терминалов, и при первом
включении терминала в VSC, скорее всего, запустится powershell.
Измените настройки VSC, чтобы по умолчанию всегда запускался Git Bash.
В выпадающем окне терминала VSC выберите пункт Select default shell:

В открывшейся панели выберите "Git Bash".

Готово. Теперь при запуске терминала будет автоматически запускаться Git Bash.

Все дальнейшие команды и примеры будут даны именно для Git Bash, запущенном в VSC.

Теперь во время работы можно будет не открывать терминал в отдельном окне,
а работать с ним прямо из интерфейса VSC.

Откройте в редакторе директорию /Dev: в главном меню выберите File → Open Folder

Во встроенном терминале VSC выполните команду клонирования репозитория.
Обратите внимание, что в терминале вы окажетесь в директории /Dev,
в той директории, которую вы открыли в VSC.

	# Клонируйте репозиторий с сайта Github
	# После git clone вставьте ссылку, которую вы скопировали на GitHub
	$ git clone https://github.com/username/yatube_project.git

Возможно, VSC потребует разрешения использовать Git - Разрешите.
После этого Git попросит авторизовать VSC в вашем аккаунте - И это разрешите. 

Готово. Теперь через консоль в VSC можно работать с репозиториями Git.
После авторизации начнётся клонирование репозитория, в консоли отразится ход событий:

	Cloning into 'yatube_project'...
	remote: Enumerating objects: 5, done.
	remote: Counting objects: 100% (5/5), done.
	remote: Compressing objects: 100% (5/5), done.
	remote: Total 5 (delta 0), reused 0 (delta 0), pack-reused 0
	Unpacking objects: 100% (5/5), 2.30 KiB | 2.30 MiB/s, done. 

На вашем компьютере появится директория Dev/yatube_project с файлами

    LICENSE
    README.md
    .gitignore
    .git

Папка Dev/yatube_project — это **корневая директория проекта Yatube.

Готово!

Вы создали репозиторий на сервере Git и склонировали его на компьютер.
Теперь Git будет отслеживать все изменения, которые вы будете вносить в проект,
и синхронизировать ваш локальный репозиторий с удалённым.

В репозитории пока только служебные папки, но в следующем уроке всё изменится.

