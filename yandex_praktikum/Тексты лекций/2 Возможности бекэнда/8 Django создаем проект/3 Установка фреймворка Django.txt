Установка фреймворка Django в виртуальное окружение

Убедитесь, что виртуальное окружение запущено и через менеджер пакетов
pip установите Django. Фреймворк будет установлен в виртуальное окружение.

	# python3, обнови, пожалуйста, менеджер пакетов pip
	(venv)...$ python3 -m pip install --upgrade pip
	# Нажимаем <enter>

	# Менеджер пакетов pip, поставь мне, пожалуйста, Django версии 2.2.19
	(venv)...$ pip install Django==2.2.19
	# Нажимаем <enter>

	Collecting Django==2.2.19
	  Using cached Django-2.2.19-py3-none-any.whl (7.5 MB)
	Collecting sqlparse>=0.2.2
	  Using cached sqlparse-0.4.1-py3-none-any.whl (42 kB)
	Collecting pytz
	  Using cached pytz-2021.1-py2.py3-none-any.whl (510 kB)
	Installing collected packages: sqlparse, pytz, Django
	Successfully installed Django-2.2.19 pytz-2021.1 sqlparse-0.4.1

По команде pip install Django==2.2.19 запустится менеджер пакетов pip
и установит Django версии 2.2.19 и его зависимости: пакеты pytz-2021.1
и sqlparse-0.4.1.

Версия 2.2.19 имеет статус LTS (Long Term Support, «расширенная поддержка»)
и будет поддерживаться до апреля 2022 года. Но и после этой даты проект
не «превратится в тыкву»: просто для этой версии перестанут выходить обновления
и дополнения.

Список актуальных на текущий момент версий Django можно посмотреть тут:
https://www.djangoproject.com/download/.

Обратите внимание, что курс рассчитан на версию Django 2.2+.
Для учебных проектов не устанавливайте Django 3.

По итогам работы должна получиться такая структура:

	Dev
	 └── yatube_project
		 ├── .git/      <-- папка, необходимая для работы git 
		 ├── .vscode/   <-- служебная папка с настройкой VSC (опционально)  
		 ├── venv/      <-- папка виртуального окружения с нужными зависимостями 
		 ├── README.md  <-- файл с описанием проекта
		 ├── LICENSE    <-- файл с текстом лицензии
		 └── .gitignore <-- файл со списком файлов и папок, которые Git не должен отслеживать

Настройка редактора VSC и установка версии python, отличной от системной

Остался последний шаг: нужно выбрать правильную версию Python для
виртуального окружения проекта.

Зайдите в настройки VSC: File (или Code на macOS) > Preferences > Settings.
Переключитесь в режим настроек текущего проекта, на закладку Workspace.
В строке поиска введите имя ключа конфигурации python.pythonPath и укажите значение:

    Для Windows ./venv/Scripts/python.exe или полный путь к python.exe,
	который расположен в папке venv/Scripts, должно получиться что-то типа:
	d:/Dev/yatube/venv/Scripts/python.exe

Готово! У вас установлено окружение для работы проектом Yatube.
При настройке других проектов смело повторяйте все шаги этого урока.
Официальное руководство по настройке Visual Studio Code для Python
(https://code.visualstudio.com/docs/python/environments)


