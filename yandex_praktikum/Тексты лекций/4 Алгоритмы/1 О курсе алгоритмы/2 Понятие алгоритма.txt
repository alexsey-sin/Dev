Понятие алгоритма

Определение кратчайшего пути, сложные вычисления, поиск наилучшего
совпадения — все эти задачи можно решать по-разному, и решения будут
качественно отличаться.

Одно решение потребует больше времени, другое — больше ресурсов.
В каждой конкретной ситуации разработчик должен найти оптимальный подход.

Ресторан «Алго»

Коля, Ася, Полина и Илья ужинают в ресторане. Илья забыл дома кошелёк,
и Коля предложил заплатить за него. Осталось высчитать сумму за двоих.

Можно в чеке выбрать стоимость заказов Коли и Ильи и суммировать их.
А можно пойти другим путём: вычесть из общего счёта сумму заказов
Полины и Аси. Подход к решению отличается, а результат будет тот же.
Если девушки уже вычислили свои расходы — то можно воспользоваться их
данными, и второй вариант будет проще и предпочтительнее.

Но если в ресторан пришла компания из 30 человек, и двое из них хотят
заплатить вскладчину — будет рациональнее подсчитать расходы за двоих,
а не вычитать из общей суммы расходы остальных 28-и человек.

Достичь необходимого результата можно разными способами, выполняя разные
последовательности действий. И всегда приходится выбирать оптимальный
вариант, учитывая важные критерии.

Алгоритм — это определённая последовательность действий исполнителя.

Исполнителем может быть человек, который совершает какие-то действия,
стремясь к некому результату; это может быть компьютер, выполняющий
какую-то задачу.

Человек называет свои алгоритмы планами, а для компьютера алгоритмы
описываются в компьютерной программе.

Когда вы едете на работу, имеют значение:

    время — до работы нужно добраться быстро;
    деньги — дорога на работу должна окупаться;
    физические усилия — на работе не нужен полумёртвый от усталости сотрудник.

Пойти пешком — сэкономить деньги, но устать и потерять время; поехать на
такси — потратить много денег, но сэкономить время. Найти оптимальное
решение поможет правильный алгоритм.

Если стоит задача «попить чаю», а качество чая можно оставить за
скобками — то самым рациональным вариантом будет кинуть в чашку пакетик
и залить кипятком: оптимизированы время и усилия; три минуты, и готово.
Если же в приоритете качество чая — придётся жертвовать другим ресурсом:
временем.

В программировании важны время работы алгоритма, объём используемой памяти,
время и деньги, потраченные на реализацию программы; зачастую есть и другие
существенные метрики.

Параметры задачи могут измениться. Если вы живёте рядом с офисом — хорошим
решением будет ходить на работу пешком. Но при переезде в другой район такой
подход может оказаться не самым лучшим.

Аналогично в программировании — хорошее решение для одних входных данных может
утратить свою целесообразность, если данные изменятся.

В этом курсе вы научитесь:

    придумывать алгоритмы для решения задач и оценивать эффективность этих
		алгоритмов;
    применять классические алгоритмы для решения популярных задач;
    реализовывать алгоритмы на языке python.

Дерзайте!

