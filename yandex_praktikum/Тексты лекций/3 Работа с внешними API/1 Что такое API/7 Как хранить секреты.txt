Как хранить секреты

Никогда не храните секретные данные (логины, пароли, токены, ключи доступа)
в вашем коде, это плохая практика. В функции и в объекты любой ключ доступа
должен передаваться только в виде переменной, хранящей этот ключ. Тут вам
поможет библиотека dotenv

	# небезопасный вариант
	# отправляем запрос с токеном к API ВКонтакте, 
	# токен пишем прямо в функции.
	# никогда_так_не_делайте
	def any_function():
		secret_token = {'token': 'my_super_secret_token'}  # шпионы рады, шпионы крадут токен отсюда
		response_post = requests.post('https://api.vk.com/method/users.get', data=secret_token)

	# безопасный вариант
	# отправляем запрос с токеном к API ВКонтакте
	# токен получаем из специального хранилища
	# = только так и делайте =
	from dotenv import load_dotenv 
	load_dotenv()


	def other_function():    
		secret_token = os.getenv('TOKEN')
		# взяли переменную token из загруженного внешнего хранилища
		# шпионы печальны, шпионы ушли с пустыми руками
		response_post = requests.post('https://api.vk.com/method/users.get', data=secret_token)


В следующих уроках вы будете много работать с токенами, не пренебрегайте
правилами безопасности даже во время учёбы, пусть лёгкая паранойя войдёт в
привычку и станет рефлекторной.

Когда в коде используются какие-то секретные данные, импортируйте их в
код извне. Это можно сделать как минимум двумя способами:

Локальное хранение секретных ключей
Создайте файл .env (все файлы, которые начинаются с точки — скрыты от просмотра
в консоли и в некоторых операционных системах) и запишите в него переменные в
формате ключ=значение, по одной переменной на строку:
TOKEN=123
LOGIN=test
SID=some_sid

Для доступа к переменным установите через pip библиотеку dotenv :
pip install python-dotenv

Затем импортируйте и выполните функцию load_dotenv :
	import os
	from dotenv import load_dotenv 
	load_dotenv()

	token = os.getenv('TOKEN')
	print(token)  # 123

Файл .env должен лежать в той же директории, что и исполняемый файл.

Никогда не храните файл .env в репозитории! Проверьте, что в .gitignore
есть строчка .env, чтобы случайно не запушить файл на удалённый сервер.
В репозиторий можно положить файл .env.example, указав в нём только названия
переменных, но не значения!

Глобальное хранение секретных ключей
Выполните в баше команду export token=123, это запишет токен в общее
пространство переменных окружения. Просмотреть содержимое этого пространства
можно командой env в терминале.
Чтобы получить доступ к переменным окружения из кода, воспользуйтесь методом
getenv из встроенного модуля os:

	import os


	account_sid = os.getenv("ACCOUNT_SID")
	auth_token = os.getenv("TOKEN")

Для доступа к глобальным переменным достаточно метода os.getenv

