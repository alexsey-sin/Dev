Запрос к API сервиса ВКонтакте
Самое время подёргать за ниточки API ВКонтакте и посмотреть, что мы можем получить.
Посмотрите, что интересного есть на странице документации API ВК.
(https://vk.com/dev/manuals)

Методами API здесь называют команды, выполняющие запросы к серверу ВКонтакте.
Например, метод photos.add добавляет фотографию, а метод gifts.get возвращает
список подарков определенного пользователя.

Место для того, чтобы открыть страшную правду: Вконтакте не соблюдает REST.
Mail.ru, Twitter и другие крупные сервисы тоже так делают: многие крупные
компании разрабатывают собственные внутренние стандарты, и с этим приходится
мириться. ¯\(ツ)/¯

Методы разделены на группы: для работы с друзьями пользователя используют методы
friends, для работы с лайками — likes. У метода могут быть параметры: это какие-то
входные данные (например, online=1).

Перейдите на страницу «Список методов»(https://vk.com/dev/methods),
в навигации ВК эта ссылка в самом низу слева.

Давайте добудем из ВК данные о каком-нибудь пользователе.

Список методов для работы с пользователями собран под вкладкой Users.
Необходимый метод API называется users.get, он принимает на вход необязательный
параметр user_ids, идентификатор пользователя, один или несколько. Если user_ids
не указан явно — API вернёт данные владельца токена.

Соберём нужный запрос:
https://api.vk.com/method/users.get?user_ids=USER_ID&v=5.92&access_token=ХХХ

... где вместо USER_ID — id интересующего вас пользователя, а ХХХ — ваш токен.

Рассмотрим этот запрос подробнее.
https:// — указывает на то, что мы осуществляем запрос через протокол HTTPS,
HyperText Transfer Protocol Secure (англ. «защищённый HTTP»).
api.vk.com/method — адрес сервиса API ВКонтакте.

users.get — название метода API.
После вопросительного знака идут параметры GET-запроса, разделенные символом &.
Так мы передаём методу входные данные.
В нашем запросе три параметра:
user_ids= необязательный параметр метода, указывает на пользователя или список
пользователей (через запятую).
v=5.92 указывает на то, что формат данных должен соответствовать версии API
равной 5.92 (обычно нужно указывать последнюю версию).
access_token= токен авторизации, вы получили его ранее.

В ответ на ваш запрос сервер вернет JSON-объект с данными.
Например, для пользователя с идентификатором 210700286:
	{
		 "response":[
				{
					 "id":210700286,
					 "first_name":"Lindsey",
					 "last_name":"Stirling",
					 "is_closed":false,
					 "can_access_closed":true
				}
		 ]
	}
Если в запросе допущена ошибка, например, не передан access_token, сервер вернет
сообщение об ошибке, с кодом и описанием.

===============================================================================
Задача:
Допишите функцию, которая принимает на вход идентификатор пользователя и
возвращает его друзей в виде словаря. Для преобразования ответа в формат JSON
используется метод .json()

Если запрос вернет ошибку User authorization failed: access_token was given to
another ip address, используйте вечный токен (scope=friends,offline).
Не забудьте отозвать токен после работы с тренажером.

Подсказка:
Вам нужно обратиться к адресу API ВК, и при обращении применить метод friends.get

А для отправки запроса в вашем арсенале есть функция requests.post(), надо только
собрать необходимые параметры в словарь data

Обратите внимание, что ВК применяет запрос не по прямому назначению: в его API
получение данных происходит через метод POST. Но что поделать, так уж он
спроектирован.

	import requests
	BASE_URL = 'https://api.vk.com/method/friends.get'
	ACCESS_TOKEN = 'cc325897f23b3e7ae90ee879c816742ee5ae4942d52f1dc6d3467642c988ba7894e1fdac69667208131b4'
	API_V = '5.92'

	def get_friends(user_id):
		data = {
			'user_id': user_id,
			'v': API_V,
			'access_token': ACCESS_TOKEN
		}
		friends_list = requests.post(BASE_URL, data=data)
		return friends_list.json()['response']
	 
	print(get_friends(531301803))
	# запрашиваем список друзей пользователя с ID 531301803
===============================================================================

