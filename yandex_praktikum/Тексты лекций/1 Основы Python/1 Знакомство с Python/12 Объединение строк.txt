Объединение строк

Сделать одну строку из списка строк позволяет метод join. Он принимает список
как аргумент и возвращает одну строку, например:

	bayan = ['[', ':', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', ':', ']']
	# превращаем список в баян методом join()
	print(''.join(bayan)) 

	[:||||||||||:] 

Мы впервые используем такой инструмент, как метод. Это разновидность функции.
С другими функциями, вроде print() иlen(), у него много общего. Тоже
мини-программа из Python, тоже аргументы в круглых скобках. Однако, в отличие
от функций, метод в коде привязывается к объекту, в нашем случае — к строке.

Вызов метода записывают всегда так:

объект.имя_метода(аргументы_метода)

Вот пример, когда метод .join() применяется к строке ", и ":

	pushkin = ['божество', 'вдохновенье', 'жизнь', 'слёзы', 'любовь']
	text = ', и '.join(pushkin)
	print('Что было после чудного мгновенья: и ' + text) 

	Что было после чудного мгновенья: и божество, и вдохновенье, и жизнь, и слёзы, и любовь 

Метод .join() сделал из списка строку, а объект, к которому применяли метод,
стал разделителем. В примере с баяном разделитель был равен пустой строке,
поэтому символы встали рядом.

===============================================================================
Тренажер

Задача 1/2:

Анфиса пересчитала ваших друзей, теперь попросите её перечислить их по именам.

Вызовите метод join() с аргументом friends, чтобы получилась строка из имён,
разделённых запятой и пробелом. Сохраните эту строку в переменной friends_string.
В конце программы выведите её значение, подставив в сообщение: Твои друзья:
{список_друзей}

Подсказка:

Для создания строки friends_string примените метод join() к строке ', '

	friends_string = ', '.join(friends) 

******************************************
	print("Привет, я Анфиса!")
	friends = ['Серёга', 'Соня', 'Дима', 'Алина', 'Егор']
	friends_string = ', '.join(friends)
	print('Твои друзья:', friends_string)
******************************************

Задача 2/2:

В переменной stations хранятся станции электрички Москва — Петушки.
Выведите на экран маршрут, в котором все станции перечислены через дефис.
По обе стороны от каждого дефиса должны стоять пробелы.

Подсказка:

Примените метод join() с аргументом stations к строке из трёх символов:
пробел, дефис и пробел.

******************************************
	stations = ['Москва', 'Серп и Молот', 'Карачарово', 'Чухлинка', 'Кусково', 'Новогиреево', 'Реутово', 'Никольское', 'Салтыковская', 'Кучино', 'Железнодорожная', 'Чёрное', 'Купавна', '33-й километр', 'Электроугли', '43-й километр', 'Храпуново', 'Есино', 'Фрязево', '61-й километр', '65-й километр', 'Павлово-Посад', 'Назарьево', 'Дрезна', '85-й километр', 'Орехово-Зуево', 'Крутое', 'Воиново', 'Усад', '105-й километр', 'Покров', '113-й километр', 'Омутище', 'Леоново', 'Петушки']

	# напишите свой код здесь
	str = ' - '.join(stations)
	print(str)
******************************************
===============================================================================
