Переменные и типы

Окей, вы научились выводить строки на экран. Но просто напечатать строку — этого мало.

Представьте: вы читаете книгу, но не можете запомнить, сколько страниц прочли.
Умеете читать, но вот сохранить в памяти номер страницы не удаётся.
Вылетает из головы, где вы остановились, поэтому приходится отсчитывать страницы
от начала книги. 10, 24, 140, 250 страниц — и так каждый раз.

Так же беспомощны программы, которые не могут сохранять данные. Именно поэтому
настоящее программирование начинается с переменных, запоминающих результаты
промежуточных действий.

Переменная работает как подписанная коробка или помеченная ячейка, куда можно
что-то положить и не потерять.

Когда вы первый раз пишете в коде имя переменной, это называется объявление
переменной. В Python переменную всегда объявляют, присваивая ей какое-нибудь
значение. Достаточно просто ввести имя, поставить знак равенства = (называется
оператор присваивания) и написать значение, которое будет храниться в переменной.

Вернёмся к чтению. Отложив программирование и ночной сон, вы прочли 210 страниц.
Теперь можно сказать:

	pages = 210 

Вы создали «коробку» с именем pages и положили в неё значение 210.

Строка 'Привет, Мир!' из прошлого урока — это тоже пример данных, которые могут
храниться в памяти компьютера. 

	# Объявили переменную message и присвоили ей значение: строку 'Привет, Мир!'
	message = 'Привет, Мир!'

Теперь, если в программе написать имя переменной, подставится её значение:

	# Объявили переменную message и присвоили ей значение: строку 'Привет, Мир!'
	message = 'Привет, Мир!'
	print(message)

И на экране будет напечатано

Привет, Мир! 

Значения переменных отличаются по своей сути. Вы только что увидели, что они
бывают числами или строками. Это разные типы данных. В Python есть и другие
типы, но пока хватит и этих двух.

Строка записывается как символ или набор символов внутри 'одинарных' либо
"двойных" кавычек:

'роман'  # строка в одинарных кавычках
"Джорджа Оруэлла"  # строка в двойных кавычках
'1984'  # число в кавычках тоже становится строкой 

Можно пользоваться любыми кавычками, но главное — открывающая и закрывающая
кавычки должны быть одинаковыми. Разные кавычки приведут к ошибке:

"Джордж Оруэлл'  # такой код приведёт к ошибке 

Со значениями разных типов операторы языка Python работают по-разному.
Например, оператор + числа — складывает, а строки — объединяет:

	word1 = 'Сколько '
	word2 = 'вы '
	word3 = 'прочли?'
	text = word1 + word2 + word3

	print(text)
	# Будет напечатано: Сколько вы прочли?

	pages = 210
	today = 42
	total = pages + today

	print(total)
	# Будет напечатано: 252

Обратите внимание: в редакторе кода числа и строки выделяются разными цветами,
чтобы читать исходный код было легче.

===============================================================================
Тренажер

Задача 1/2:

Чтобы Анфиса стала искренней и дружелюбней, научим её рассказывать о себе.
Для начала напечатайте на экран фразу 'Привет, я Анфиса, твой персональный
помощник!', подставляя переменные name и job.

Подсказка:

Ваше решение должно выглядеть так: print('Привет, я ' + name + ', твой ' + job + '!')

******************************************
	name = 'Анфиса'                # имя
	job = 'персональный помощник'  # профессия

	# допишите ваш код ниже вместо многоточий:
	print('Привет, я ' + name + ', твой ' + job + '!')
******************************************
Задача 2/2:

Если Анфиса поселится в фитнес-трекере, она сможет считать количество шагов
пользователя. Научите Анфису подставлять в сообщение сумму шагов, пройденных
за два дня.

В переменных steps_today и steps_yesterday записано, сколько шагов прошёл
незнакомый вам Геннадий вчера и сегодня. Напечатайте на экран ответ на вопрос
Сколько шагов сделал Геннадий за два дня?

Подсказка:

Сложите шаги, и поместите результат в переменную steps_sum. Её значение
будет выведено на экран второй строкой, после вопроса.

******************************************
	steps_today = 6783
	steps_yesterday = 8452

	steps_sum = steps_today + steps_yesterday   # вычислите сумму здесь

	print('Сколько шагов сделал Геннадий за два дня?')
	print(steps_sum)
******************************************
===============================================================================
