Счётчики

Отдохнём пару минут от функций, сделаем что-нибудь полезное. Посчитаем общую
площадь большой квартиры, зная её планировку.

	areas = [
		5.38, 21.72, 7.78, 26.86, 5.75,
		29.84, 22.67, 5.50, 16.85, 4.52
	]

	# В этой переменной будем суммировать площади.
	# Пока что в ней ничего нет, поэтому она равна нулю.
	sum_area = 0

	for area in areas:
		# прибавляем к sum_area площадь ещё одной комнаты
		sum_area = sum_area + area

	print("Общая площадь =", sum_area)

	Общая площадь = 146.87

Оператор += и прочая арифметика

Добавление одного и того же значения к переменной (в цикле или в других случаях)
— достаточно частая операция, и для неё придумали специальный оператор: +=.

С помощью += можно сделать код короче и проще. 

	# Например, вместо строки
	counter = counter + 10  # На каждом шаге counter увеличивается на десять
	# можно написать
	counter += 10  # На каждом шаге counter увеличивается на десять

	# Подобный оператор есть и для вычитания
	countdown -= 3  # На каждом шаге countdown уменьшается на три

	# и для умножения
	money *= 7  # На каждом шаге money умножаются на 7

	# и для деления
	problem /= 2  # На каждом шаге problem делятся пополам

Depeche Mode XXI

Ещё задачка: посчитаем на Python, сколько альбомов выпустила музыкальная группа
Depeche Mode в 21 веке.

	years = [
		1981, 1982, 1983, 1984, 1986, 1987, 1990,
		1993, 1997, 2001, 2005, 2009, 2013, 2017
	]

	# В этой переменной будем подсчитывать количество альбомов.
	# Пока что в ней ничего нет, она равна нулю.
	count = 0

	for year in years:
		if year > 2000:
			# Каждый раз загибаем по одному пальцу,
			# обнаружив альбом, выпущенный в 21 веке
			count += 1   # это то же самое, что 'count = count + 1'

	print("Выпущено альбомов в XXI веке:", count)

	Выпущено альбомов в XXI веке: 5 

Подобные выражения часто встречаются в программировании при подсчёте чего-нибудь.
Для переменной, которая тут названа count, даже есть общепринятое название
— счётчик (англ. count, «сосчитать»).

===============================================================================
Тренажер

Задача:

Анфиса может анализировать списки. Например, подсчитывать дни, когда в вашем
городе или в городах ваших друзей стояла хорошая погода.

Есть списки средних дневных температур в Москве за май 2017 и 2018 годов.
Создайте функцию comfort_count(temperatures) для подсчёта комфортных дней в
переданном списке — дней с температурой воздуха от 22 до 26 градусов включительно.

Функция в результате работы должна вывести на экран строку 'Количество
комфортных дней в этом месяце: N', где N — результат подсчёта в цикле с условием.
Сначала посчитайте комфортные дни в мае 2017-го года, а потом — в мае 2018-го.

Подсказка:

Объявите функцию def comfort_count(temperatures): и внутри неё:

    объявите переменную-счётчик;
    
	пройдите по списку циклом for temp in temperatures:
    
	в цикле увеличивайте значение переменной-счётчика каждый раз, когда значение
	температуры находится в допустимом интервале;
    
	напишите вызов функции print() после цикла, чтобы вывести строку
	«Количество...» при выполнении функции comfort_count()

******************************************
	may_2017 = [24, 26, 15, 10, 15, 19, 10, 1, 4, 7, 7, 7, 12, 14, 17, 8, 9, 19, 21, 22, 11, 15, 19, 23, 15, 21, 16, 13, 25, 17, 19]
	may_2018 = [20, 27, 23, 18, 24, 16, 20, 24, 18, 15, 19, 25, 24, 26, 19, 24, 25, 21, 17, 11, 20, 21, 22, 23, 18, 20, 23, 18, 22, 23, 11]

	# допишите код ниже
	def comfort_count(temperatures):
		count = 0
		for temperature in temperatures:
			if 22 <= temperature <= 26:
				count += 1
		print('Количество комфортных дней в этом месяце:', count)

	# дальше код не меняйте
	comfort_count(may_2017)  # узнаем, что было в мае 2017 г.
	comfort_count(may_2018)  # узнаем, что было в мае 2018 г.
******************************************
===============================================================================
