Разбиение на функции

В больших проектах, написанных на Python, принято выносить весь повторяющийся
код в отдельные функции перед телом основной программы. Посмотрим на пример:

	# код функции say_hello
	def say_hello(current_hour):
		if current_hour <= 5 or current_hour >= 23:
			print('Доброй ночи!')
		elif current_hour >= 6 and current_hour <= 11:
			print('Доброе утро!')
		elif current_hour >= 12 and current_hour <= 17:
			print('Добрый день!')
		elif current_hour >= 18 and current_hour <= 22:
			print('Добрый вечер!')


	# перенесли основной код внутрь функции runner()
	def runner():
		say_hello(4)
		say_hello(10)
		say_hello(15)
		say_hello(20)


	# в теле программы остаётся только один вызов:
	runner()

Функция say_hello() содержит основную логику, а runner() выполняет роль
управляющего механизма. Такое разделение придаёт коду программы аккуратный
внешний вид, делает его более выразительным, упрощает чтение.

===============================================================================
Тренажер

Задача 1/3:

Подготовьте код Анфисы к использованию на сервере.

    Напишите функцию process_query(). Перенесите в неё весь код из тела основной
	программы. Эта функция будет принимать на вход запросы пользователя и выдавать
	ответ на них. Пока она может обработать всего один запрос — сообщить количество
	друзей.
    
	Добавьте вызов функции process_query() в тело основной программы.

Подсказка:

Начните с определения def process_query(): перед указанным кодом. И отступы в
коде функции не забывайте.

******************************************
FRIENDS = ['Серёга', 'Соня', 'Дима', 'Алина', 'Егор']

def print_friends_count(friends_count):
    if friends_count == 1:
        print('У тебя 1 друг')
    elif 2 <= friends_count <= 4:
        print('У тебя ' + str(friends_count) + ' друга')
    elif friends_count >= 5:
        print('У тебя ' + str(friends_count) + ' друзей')


# перенесите в функцию process_query() вот этот код:
def process_query():
    print("Привет, я Анфиса!")
    count = len(FRIENDS)
    print_friends_count(count)

process_query()
******************************************

Задача 2/3:

На серверы приходит множество запросов — от разных пользователей или от других
серверов. Измените функцию process_query() (обработчик запроса), чтобы она
поддерживала несколько разных запросов, а не только один.

    Добавьте аргумент query в функцию process_query(). Этот аргумент будет
	сообщать, какой именно запрос необходимо обработать.
    
	В начало функции process_query() добавьте проверку значения переменной query:
        
		если значение равно 'Сколько у меня друзей?' — выведите ответ на этот
		вопрос, как в предыдущем задании;
        
		в противном случае — выведите '<неизвестный запрос>';
        
		Анфиса должна здороваться при любом запросе.
    
	Добавьте вызов process_query('Сколько у меня друзей?') в основное тело
	программы.
    
	Добавьте ещё один вызов process_query('Как меня зовут?') в основное тело
	программы.

Подсказка:

Используйте сравнение if query == ... для определения запроса.

******************************************
FRIENDS = ['Серёга', 'Соня', 'Дима', 'Алина', 'Егор']

def print_friends_count(friends_count):
    if friends_count == 1:
        print('У тебя 1 друг')
    elif 2 <= friends_count <= 4:
        print('У тебя ' + str(friends_count) + ' друга')
    elif friends_count >= 5:
        print('У тебя ' + str(friends_count) + ' друзей')


# перенесите в функцию process_query() вот этот код:
def process_query(query):
    print("Привет, я Анфиса!")
    if query == 'Сколько у меня друзей?':
        count = len(FRIENDS)
        print_friends_count(count)
    else:
        print('<неизвестный запрос>')

process_query('Сколько у меня друзей?')
process_query('Как меня зовут?')
******************************************

Задача 3/3:

    Добавьте в функцию process_query() обработку ещё одного запроса 'Кто все
	мои друзья?'. В ответ нужно выводить на экран Твои друзья: {список_друзей},
	где {список_друзей} — строка, состоящая из списка друзей, разделённых запятой
	и пробелом.
    
	Добавьте вызов process_query('Кто все мои друзья?') в тело основной программы.

Подсказка:

Список друзей можно получить, вызвав ', '.join(FRIENDS)

******************************************
	FRIENDS = ['Серёга', 'Соня', 'Дима', 'Алина', 'Егор']

	def print_friends_count(friends_count):
		if friends_count == 1:
			print('У тебя 1 друг')
		elif 2 <= friends_count <= 4:
			print('У тебя ' + str(friends_count) + ' друга')
		elif friends_count >= 5:
			print('У тебя ' + str(friends_count) + ' друзей')


	# перенесите в функцию process_query() вот этот код:
	def process_query(query):
		print("Привет, я Анфиса!")
		if query == 'Сколько у меня друзей?':
			count = len(FRIENDS)
			print_friends_count(count)
		elif query == 'Кто все мои друзья?':
			print('Твои друзья: ' + ', '.join(FRIENDS))
		else:
			print('<неизвестный запрос>')

	process_query('Сколько у меня друзей?')
	process_query('Кто все мои друзья?')
	process_query('Как меня зовут?')
******************************************
===============================================================================
