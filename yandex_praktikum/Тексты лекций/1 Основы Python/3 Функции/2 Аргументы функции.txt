Аргументы функции

В Python аргументам функций может быть присвоено «значение по умолчанию».
Оно будет применено, если при вызове функции вы не передали ожидаемый аргумент.

Функция say_hello() принимает два аргумента — current_hour и name, которому
задано значение по умолчанию. При вызове только с одним аргументом current_hour
значением второго аргумента name станет пустая строка.

	# код функции say_hello
	# Если при вызове функции второй аргумент не будет указан —
	# функция не сломается, а установит значением для name пустую строку
	def say_hello(current_hour, name=''):
		if current_hour <= 5 or current_hour >= 23:
			hello_message = 'Доброй ночи'
		elif current_hour >= 6 and current_hour <= 11:
			hello_message = 'Доброе утро'
		elif current_hour >= 12 and current_hour <= 17:
			hello_message = 'Добрый день'
		elif current_hour >= 18 and current_hour <= 22:
			hello_message = 'Добрый вечер'
		# Проверим содержание переменной name,
		# и если это пустая строка — на печать выведем только приветствие,
		# без name
		if name == '':
			print(hello_message + '!')
		# ...а если в переменной name НЕ пустая строка — 
		# выведем на печать приветствие и имя из name
		else:
			print(hello_message + ', ' + name + '!')


	# Вызовем say_hello() с двумя аргументами
	say_hello(10, 'Тимур')
	# Будет напечатано: Доброе утро, Тимур!

	# И ещё раз вызовем say_hello() с двумя аргументами
	say_hello(14, 'Елена')
	# Будет напечатано: Добрый день, Елена!

	# Забудем передать второй аргумент. Никаких имён!
	say_hello(20)
	# Будет напечатано: Добрый вечер!

	# Функция не увидела второго аргумента 
	# и присвоила переменной name значение '' (пустая строка)
	# Сработало условие if name == '' и напечаталась строка без запятой и без name

При вызове функции можно явно указывать, какому аргументу какое значение
соответствует. В таком случае порядок следования аргументов в скобках роли
не играет.

	say_hello(current_hour=10, name='Тимур')
	# Будет напечатано: Доброе утро, Тимур!

	# Поменяем аргументы местами: сперва имя, потом время:
	say_hello(name='Елена', current_hour=14)
	# Будет напечатано: Добрый день, Елена!
	# Ничего не сломалось!

	say_hello(current_hour=20)
	# Будет напечатано: Добрый вечер!

===============================================================================
Тренажер

Задача:

По задумке программиста функция print_friends_count() должна принять на вход
два аргумента: имя человека и число (количество его друзей), а в результате
работы вывести радостную фразу '{имя}, у тебя {количество} друзей'

Например: Лера, у тебя 18 друзей

Или: Коля, у тебя 1 друг

А если имя неизвестно — тогда фраза должна быть такая: 'У тебя {количество} друзей'.
Например: У тебя 10 друзей.

В начале функции в переменную text сохраняется слово «друг» в нужном склонении,
в зависимости от значения переменной friends_count. Этот фрагмент кода работает,
изменять его не нужно.

Но функцию нужно дописать: сейчас она принимает лишь один аргумент
(количество друзей) и ничего не печатает.

    Допишите функцию print_friends_count() так, чтобы она принимала второй
		аргумент: name (в него будет передаваться имя)
    
	На случай, если аргумент name не будет передан — установите для него
		значение по умолчанию: пустую строку.
    
	В функцию добавьте проверку:
    
	Если в переменной name содержится имя (если в ней не пустая строка)
		— функция должна напечатать '{имя}, у тебя {количество} друзей'
    
	Если же в переменной name содержится пустая строка — должно быть
		напечатано 'У тебя {количество} друзей'

Подсказка:

    Добавьте в определение функции аргумент name со значением по умолчанию ''
	(пустая строка).
    
	В конец кода функции допишите конструкцию if-else, которая выводит разные
	тексты в разных условиях.
    
	Не забудьте вывести переменную text: name + ', у тебя ' + text. И в варианте,
	где имени нет — тоже.

******************************************
# Добавьте вторым аргументом переменную name. 
# Её значением по умолчанию должна быть пустая строка
def print_friends_count(friends_count, name=''):
    if friends_count == 1:
        text = '1 друг'
    elif 2 <= friends_count <= 4:
        text = str(friends_count) + ' друга'
    elif friends_count >= 5:
        text = str(friends_count) + ' друзей'
    # Здесь проверьте, что содержит переменная name 
    # и в зависимости от её значения напечатайте нужные варианты фразы
    if name == '':
        print('У тебя', text)
    else:
        print(name + ', у тебя', text)
# дальше код не меняйте
print_friends_count(3, 'Артём')
print_friends_count(friends_count=7, name='Марина')
print_friends_count(6)
print_friends_count(4, name='Настя')
******************************************
===============================================================================
