Передаём параметры в URL

Вспомним поисковый запрос к Яндексу из прошлой темы.

Результаты поиска были доступны по адресу:

https://yandex.ru/search/?text=что%20такое%20backend&lr=213

Как можно запросить эту же информацию из Python? Вроде бы всё уже известно,
обращаемся по сети вот так:

url = 'https://yandex.ru/search/?text=%D1%87%D1%82%D0%BE%20%D1%82%D0%B0%D0%BA%D0%BE%D0%B5%20backend&lr=213'
    
response = requests.get(url) 

Но это не очень красиво.

Приходится вручную писать длинный URL, перечисляя все параметры. А что если бы
их было больше?

Ещё приходится самим кодировать символы в URL, что совсем скучно.

К счастью, Python умеет удобно формировать адреса URL, подставляя в них
параметры из словаря. Функция get() сама производит нужные преобразования,
нужно лишь передать параметры через именованный аргумент params:

	import requests

	search_parameters = {
		'text': 'что такое backend',
		'lr': 213
	}
	url = 'https://yandex.ru/search/'
	# Функция get() приняла на вход URL и параметры поиска,
	# а дальше она знает, что делать
	response = requests.get(url, params=search_parameters)

	print(response.status_code)
	print(response.url)

	200
	https://yandex.ru/search/?text=%D1%87%D1%82%D0%BE+%D1%82%D0%B0%D0%BA%D0%BE%D0%B5+backend&lr=213

Любимое число бэкендеров — это 200. Оно значит, что сервер всё понял и ответил
как надо.

Бывают такие параметры, которым не нужно присваивать значение, а достаточно
передать только имя. Например, параметр u сервиса wttr.in переведёт все величины
в английскую систему мер (градусы Фаренгейта, мили, дюймы): http://wttr.in/?u .
Для таких параметров в словаре в качестве значения указывается пустая строка.

	import requests
		
			
	parameters = {
		'u': '',
		'T': ''
	}
	url = 'http://wttr.in'

	# параметры передаются через аргумент params
	response = requests.get(url, params=parameters)

	print(response.text)

	Weather report: Moscow, Russia

		 \   /     Sunny
		  .-.      71..75 °F      
	   ― (   ) ―   → 6 mph        
		  `-’      6 mi           
		 /   \     0.0 in

===============================================================================
Тренажер

Задача 1/2:

Запросите погодный сервис http://wttr.in по URL без параметров. А их задайте
словарём weather_parameters. Функция get() должна принимать его, как отдельный
аргумент params.

Подсказка:

Значением параметра Т в словаре задайте пустую строку.

******************************************
	import requests


	url = 'https://wttr.in'  # не изменяйте значение URL

	weather_parameters = {
		'0': '',
		'T': ''  # добавьте параметр запроса `T`, чтобы вернулся чёрно-белый текст
	}

	response = requests.get(url, params=weather_parameters)  # передайте параметры в http-запрос

	print(response.text)
******************************************

Задача 2/2:

Добавьте в словарь с параметрами weather_parameters ещё два параметра:

    M без значения — чтобы скорость ветра была в метрах в секунду, как принято
	у метеорологов;
    
	lang со значением ru, чтобы прогноз выдавался на русском языке.

Обратите внимание на изменения при добавлении этих параметров. О других
параметрах можно прочитать в документации.(https://wttr.in/:help?lang=ru)

Подсказка:

У всех параметров, кроме lang, значением должна быть пустая строка.

******************************************
	import requests


	url = 'https://wttr.in'  # не изменяйте значение URL

	weather_parameters = {
		'0': '',
		'T': '',
		'M': '',
		'lang': 'ru'
	}

	response = requests.get(url, params=weather_parameters)  # передайте параметры в http-запрос

	print(response.text)
******************************************
===============================================================================
