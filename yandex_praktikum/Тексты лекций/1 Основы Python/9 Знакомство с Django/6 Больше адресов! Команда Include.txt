Больше адресов! Команда Include

Вернёмся к проекту Anfisa4friends. Все доступные URL проекта можно хранить
в anfisa4friends/urls.py (будем называть его «головным urls.py»).

Но обычно так не делают. Когда проект разрастётся — список адресов получится
довольно большой. Приложения будет неудобно переносить в другой проект
(придется копировать отдельные path из головного urls.py и как-то при этом
не запутаться).

Гораздо удобнее читать список адресов, разбитый по приложениям. Поэтому файл
с адресами, относящимися к какому-либо приложению, хранят в директории этого
приложения.

Для того, чтобы проект «увидел» список адресов из приложения, файлы urls.py
приложений включают командой include в головной urls.py:

	# список urlpatterns из файла anfisa4friends/urls.py
	...

	urlpatterns = [
		# дорогой Django, если ты получил запрос к главной странице — 
		# смотри правила обработки этого запроса в файле urls.py в директории /homepage
		path('', include('homepage.urls')), 

		# если запрос начинается с 'icecream/' — 
		# то правила обработки таких запросов ищи в urls.py в директории icecream/
		path('icecream/', include('icecream.urls')),

	]

Запросы к главной странице будем обрабатывать в файле homepage/urls.py:

	# список urlpatterns из файла homepage/urls.py

	# сюда отдаются только запросы к адресам, 
	# которые начинаются с '' (пустая строка, запрос к главной странице)

	urlpatterns = [
		# этот path() сработает для запроса к адресу ''
		path('', views.index),
	]

Запросы к адресам, начинающимся с /icecream/, будут направлены в файл
icecream/urls.py, и там будет продолжен поиск совпадений.

Всё довольно просто, но есть хитрость.

В файле urls.py, присоединённом через инструкцию include, указывается
урезанный шаблон адреса: здесь не пишется та часть адреса, которая указана
в головном urls.py.

Если в головном urls.py есть правило

	...
	path('icecream/', include('icecream.urls')),
	... 

то для обработки адреса icecream/best-icecream/ правило в файле icecream/urls.py
должно быть таким:

	...
	# здесь не указана часть адреса: фрагмент "icecream/" отрезан!
	path('best-icecream/', views.index),
	... 

Часть адреса icecream/ «осталась» в головном urls.py и не указывается в
присоединённом файле.

Теперь будет несложно понять, почему в файле icecream/urls.py шаблоны адресов
выглядят именно так:

	# список urlpatterns из файла icecream/urls.py

	# сюда отдаются только запросы к адресам, 
	# которые начинаются с 'icecream/'

	urlpatterns = [
		# этот path() сработает для запроса к адресу /icecream
		# адрес = 'icecream/' + '' (пустая строка)
		path('', views.icecream_list),

		# этот path() сработает для запроса к адресу icecream/1/
		# адрес = 'icecream/' + '1/'
		path('1/', views.icecream_detail_1), 
	]

Список всех сортов мороженого можно будет увидеть по адресу icecream/,
а подробная информация о мороженом с id == 1 будет доступна по адресу icecream/1/.

===============================================================================
Тренажер - проект

Задача:

    Инструкцией include подключите файл homepage/urls.py к главному urls.py
	проекта. Это правило должно срабатывать при обращении к главной странице
	проекта.
    
	В файл homepage/urls.py добавьте path() с шаблоном адреса главной страницы
	и вызовом view-функции index() из файла homepage/views.py. Задеплойте и
	откройте главную страницу.

Подсказка:

    В файле anfisa4friends/urls.py добавьте в список urlpatterns строку
	path('', include('homepage.urls')). И не забудьте запятую после неё.
    
	В homepage/urls.py в список urlpatterns добавьте path('', views.index),
	теперь при обращении к главной странице будет вызвана функция index().

Проект в папке progect_6
===============================================================================
