Ветвления

Кроме арифметических выражений, в Python есть логические выражения, которые
возвращают ответ: истинно или ложно выражение.

Например, равенство проверяется оператором ==. Поначалу этот оператор часто
путают с оператором присваивания =. В выражении x = 5 применён оператор
присваивания: переменной x присвоено значение 5.

Выражение x == 5, в котором применён логический оператор «равно» — это,
по сути, вопрос: «а правда ли, что x равен пяти?».

В зависимости от того, какое значение присвоено переменной x, программа
даст ответ («вернёт значение»): «да, правда», True; или «нет, неправда», False.

Ещё числа можно сравнивать операторами < (меньше) и > (больше).

5 < 3: «а правда ли, что 5 меньше трёх?». Ответ: False.

100 > 1: «действительно ли сто больше одного?». Ответ: True.

Результат проверки передаётся особыми логическими значениями True или False.

Чтобы узнать, истинно или ложно утверждение, сохраним выражение в переменной
с именем check и выведем её значение на экран.

Проверим, считает ли Python истинными выражения «дважды два — четыре» и
«дважды два больше шести».

	check = (2*2 > 6)
	print(check)

	# Будет напечатано: False

Python вернул значение False. Следовательно, «дважды два больше шести» — неверное,
или ложное, утверждение.

	check = (2*2 == 4)
	print(check)

	# Будет напечатано: True

Python вернул значение True. Значит, «дважды два — четыре» — истинное утверждение.

Ветвление кода

Ветвления позволяют писать код, который исполняется, когда логическое выражение
истинно.

Ветвление объявляют оператором if. За ним идёт условие — логическое выражение,
которое при выполнении программы примет значение True или False.

Если выражение в условии истинно, то выполняется блок инструкций после двоеточия.
Если ложно, код после условия не сработает.

	if <условие>:
		<код, который выполнится, если условие вернуло True> 
		# Внимание: этот блок имеет отступ в 4 пробела от начала строки

Проанализируем скорость ветра по двенадцатибалльной шкале Бофорта
(https://ru.wikipedia.org/wiki/%D0%A8%D0%BA%D0%B0%D0%BB%D0%B0_%D0%91%D0%BE%D1%84%D0%BE%D1%80%D1%82%D0%B0)
, используя ветвления в Python:

	# Проверим значение переменной beaufort.
	# Если ветер в 0 баллов, то сообщим о штиле (ветра нет).
	if beaufort == 0:
		print('Штиль')
	# А если условие ложно (сила ветра не равна нулю) - этот фрагмент кода будет пропущен 
	# и не произойдёт вообще ничего

Потестируйте код в окне тренажёра: запустите код как есть, а потом измените
значение переменной beaufort с нуля на любое другое значение.

	beaufort = 0

	if beaufort == 0:
		print('Штиль')

Оператор if может включать условие «на все остальные случаи». Для этого существует
конструкция if / else.

Если условное выражение истинно, выполняется код блока if, а если ложно — код блока
else.

	if <условие>:
		<код, который выполнится, если условие истинно> 
		# Внимание: этот блок имеет отступ в 4 пробела от начала строки
	else:
		<код, который выполнится, если условие ложно>
		# Этот блок тоже отбит от края строки 4 пробелами

Продолжим анализ скорости ветра по шкале Бофорта:

	# Проверим значение переменной beaufort.
	# Если ветер в 0 баллов, то сообщим о штиле,
	# в любом другом случае сообщим, что ветер есть.
	if beaufort == 0:
		print('Штиль')
	else:
		# Если не сработало условие в if - выполняется код в блоке else
		print('Есть ветер')

Прежде чем выполнять задания — потестируйте этот код в тренажёре, изменяя
значение переменной beaufort.

Управлять погодой — это весело: «Ты уже не в Канзасе, Элли!».

	beaufort = 0

	if beaufort == 0:
		print('Штиль')
	else:
		print('Есть ветер')

===============================================================================
Тренажер

Задача 1/4:

В коде задания функция random.randint() генерирует случайное целое число от 0 до 5,
которое сохраняется в переменной messages_count.

Научите Анфису выводить фразу 'Новых сообщений:
{значение переменной messages_count}', если выпадает количество больше 0.

Подсказка:

Объявите условие if messages_count > 0. Помните о двоеточии, и об отступе в
4 пробела.
Да, и число messages_count для вывода нужно привести к строке.

******************************************
	import random  # импорт модуля random

	# функция randint() генерирует случайное целое число в заданном диапазоне
	messages_count = random.randint(0, 5)

	# напишите ваш код здесь
	if messages_count > 0:
		print('Новых сообщений:', messages_count)
******************************************

Задача 2/4:

Добавьте вывод фразы 'У вас нет новых сообщений' для случая, когда количество
сообщений равно нулю.

Подсказка:

Добавьте блок else: и после отступа — код на соответствующий случай.
Имейте в виду, что ключевое слово else должно располагаться точно под
ключевым словом if.

******************************************
	import random  # импорт модуля random

	# функция randint() генерирует случайное целое число в заданном диапазоне
	messages_count = random.randint(0, 5)

	# напишите ваш код здесь
	if messages_count > 0:
		print('Новых сообщений:', messages_count)
	else:
		print('У вас нет новых сообщений')
******************************************

Задача 3/4:

Как и в прошлой задаче, генерируется случайное значение.
Теперь это время на часах.

Научите Анфису перед знакомством желать вам доброго утра, если в переменной
current_hour записано значение меньше 12.

Подсказка:

Сравните значение переменной current_hour c 12. А за условием должно
следовать двоеточие.

******************************************
	import random  # импорт модуля random

	 # функция randint() генерирует случайное целое число в заданном диапазоне
	current_hour = random.randint(0, 23)

	if current_hour < 12: # напишите условие здесь
		print('Доброе утро!')
******************************************

Задача 4/4:

Расширьте код из прошлой задачи. Если на часах полдень или позже — пусть
Анфиса скажет: 'Добрый день!'

Подсказка:

Добавьте ключевое слово else и сразу под ним — код, который должен быть выполнен.
Не забудьте отбить код под else четырьмя отступами от начала строки.

После else должно стоять двоеточие.
else не должно быть отбито от начала строки и располагаться на том же уровне,
что и if.

******************************************
	import random  # импорт модуля random

	 # функция randint() генерирует случайное целое число в заданном диапазоне
	current_hour = random.randint(0, 23)

	if current_hour < 12: # напишите условие здесь
		print('Доброе утро!')
	else:
		print('Добрый день!')
******************************************
===============================================================================
