HTTP-запросы

HTTP-ответы мы разобрали. Но ответов не бывает без вопросов! Самое время
рассмотреть подробнее HTTP-запросы.

В «Инструментах разработчика» разберём Request Headers того запроса,
который браузер отправил серверу, чтобы показать нам страницу
https://yandex.ru/search/?text=что такое backend&lr=213.

Откройте окно «Инструменты разработчика» (F12 или через меню браузера),
в ней перейдите в закладку Network — и после этого откройте страницу в браузере.

Если страница была открыта — обновите её после того, как откроете панель Network,
иначе информационное окно останется пустым.

скрин_6.jpg

В левой колонке выберите запрос, правее откроется окно с информацией о нём.
Прокрутите до раздела Request Headers («заголовки запроса»).

Полезный и простой заголовок — accept-language — содержит список языков,
на которых браузер готов принять ответ. В этом примере браузер готов принять
содержимое страницы на русском (ru) или английском (en). q — параметр,
определяющий языковые предпочтения браузера. en;q=0.9 означает, что браузер,
получив ответ на английском языке, будет доволен на 90%. Для русского языка
установлено значение параметра 1, что соответствует 100%.

Request Method говорит о методе запроса — браузер использовал метод GET
протокола HTTP, чтобы получить содержимое страницы /search по протоколу.

Метод GET — самый распространённый в интернете. Он нужен, когда клиент
хочет отослать серверу запрос, но не собирается ничего на сервер записывать.

===============================================================================
Тренажер

Задача:

Посмотрите через инструменты разработчика китайский поисковик baidu.com
и американский yahoo.com. Найдите язык, на котором ваш браузер предпочитает
видеть эти два сайта.

Подсказка:

Инструменты разработчика → Network → Doc → Headers → Request Headers →
accept-language
===============================================================================

Осталось четыре темы!

Прежде вы как пользователь писали свои вопросы поисковой машине и не нуждались
в знании, что такое клиент, сервер и как они взаимодействуют по протоколу HTTP.
Вы управляли клиентом. Это несложно. А сейчас добро пожаловать на
серверную сторону! За те программы, что работают здесь, отвечает
бэкенд-разработчик.

Код, который вы уже написали, вполне годен и для настоящего «бэкенда».
Можете смело поручать Анфисе отправку HTTP-запросов к существующим в
интернете сервисам. Вы получите HTTP-ответы, обработаете их — и ничего
страшного не случится.



