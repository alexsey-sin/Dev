DOM, наследование и специфичность

Что нам стоит DOM построить

В HTML одни теги вкладываются в другие точно так же, как на жёстком диске
вашего компьютера директории вложены друг в друга. Структуру папок можно
отобразить в виде дерева — то же и с элементами в HTML.

Анализируя код, браузер интерпретирует вложенность тегов HTML как древовидную
структуру, создавая в памяти DOM-дерево (от англ. Document Object Model
— «объектная модель документа»).

Немного упростим код страницы и посмотрим, как будет выглядеть её DOM-дерево.

	<!DOCTYPE html>
	<html lang="ru">
	<head>
	  <title>Дама сдавала багаж | С.Маршак</title>
	</head>
	<body>
	  <header>
		<nav id="top-nav">
		<!-- ... -->
		</nav>
	  </header>
	  <main>
		<p class="negative">
		  Дама сдавала багаж:
		</p>
		<!-- ... -->
	  </main>
	  <footer>
		<!-- ... -->
	  </footer>
	</body>

	</html>

При анализе HTML-кода браузер построит такое дерево:

скрин_20.jpg

Каждый элемент на схеме называется узлом DOM. DOM-дерево походит на
генеалогическое древо, где узлы приходятся друг другу родителями или детьми.
Аналогичным языком описывают и отношения между узлами в DOM:

    для узлов header, main и footer родительским (parent) узлом будет body;
    
	по отношению друг к другу узлы header, main и footer — это «узлы одного
	уровня», siblings;
    
	узел p будет дочерним (child) для узла main.

Самый верхний узел, document, называется корневым узлом.

Термины «кузен» или «шурин» при описании DOM обычно не применяют.

DOM-дерево состоит из узлов разного типа — HTML-элементов, текста,
комментариев и других сущностей. Всего насчитывается 12 типов узлов,
(https://dom.spec.whatwg.org/#node)
но для работы с CSS нужны только узлы, образованные из HTML-элементов.

    У каждого узла, за исключением корневого, всегда есть один и только один
	прямой родитель.
    
	У любого узла может быть сколько угодно потомков

Осталось понять, каким образом структура DOM влияет на работу с CSS.

Наследование в CSS

Стили CSS, присвоенные какому-то узлу, могут наследоваться всеми его потомками.

Достаточно применить к body правила, устанавливающие размер и цвет шрифта...

	body {
	  font-size: 40px;
	  color: red;
	} 

...и большинство вложенных элементов приобретут те же свойства: любой
текстовый элемент, независимо от тега, в который он заключён, будь то
<h1>, <h2> или <p>, будет отображён шрифтом красного цвета и размером в 40 пикселей.

Обычно наследование используют для задания общих параметров текста
на странице (цвет, размер, гарнитура).

Основные наследуемые свойства:

свойство	за что отвечает
font-size	размер шрифта
font-family	тип шрифта
font-style	начертание (например, курсив)
font-weight	жирность
color	цвет

Это не полный список наследуемых свойств, но пока ограничимся этим.

Есть и свойства, которые не передаются по наследству (всё как у людей).

Основные ненаследуемые свойства — это параметры позиционирования, размеров,
отступов, фона, рамок.

Основные ненаследуемые свойства:

свойство	за что отвечает
background	цвет фона
border		цвет и размер обводки
padding		внутренний отступ вокруг элемента
margin		внешний отступ вокруг элемента
width		ширина
height		высота

Узнать, наследуется свойство или нет, можно на странице с описанием стандартов CSS.

Конфликт свойств. Специфичность селекторов

К одному элементу можно применить несколько CSS-правил, описанных для разных
селекторов. Если в этих правилах описаны одинаковые свойства с разными
значениями, то возникнет конфликт:

	...
	<style>
	  .i-m-your-father {
		font-size: 100px;
	  }
	  #obey-me {
		font-size: 100500px;
	  }
	</style>
	...
	<body>
	  <h1 id="obey-me" class="i-m-your-father">
		Текст
	  </h1>
	</body>

К элементу h1 применено несколько конфликтующих правил, определяющих размер шрифта.

    селектор по классу .i-m-your-father говорит — 100px;
    селектор по идентификатору #obey-me говорит — 100500px;

Для решения таких конфликтов есть понятие специфичность селекторов.

В общем случае правило такое: чем меньшее количество элементов потенциально
может выбрать селектор, тем этот селектор приоритетнее (специфичнее, весомее).

Селектор по классу может выбрать несколько элементов (ведь в коде может быть
несколько тегов с одинаковым значением атрибута class). А селектор по
идентификатору всегда укажет только на один элемент (ведь в пределах
страницы id должен быть уникален). Поэтому при описанном конфликте будет
применены правила из селектора по ID: размер шрифта станет неприлично
большим — 100500 пикселей.

Можно выделить четыре уровня специфичности селекторов
(в порядке повышения приоритета):

    селектор по тегу;
    селектор по классу;
    селектор по ID;
    стиль, описанный inline, в атрибуте style прямо в HTML-коде.

Может оказаться и так, что к одному элементу применены два селектора
с одинаковым приоритетом. Тогда будет применено последнее правило из списка.

	...
	<style>
	  .oh-my-class {
		color: blue;
	  }
	  .one-more-class {
		color: red;
	  }
	</style>
	...
	<p class="one-more-class oh-my-class">
	   Текст
	</p>

Текст в примере будет красным: .one-more-class стоит в коде ниже, чем .oh-my-class.
