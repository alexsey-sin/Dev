Структура HTML-документа

С элементарными тегами вы знакомы, пришло время поговорить о структуре
HTML-страницы.

Код HTML-страниц хранят в файлах с расширением .html, а файл с кодом главной
страницы сайта традиционно называют index.html.

В коде страницы помимо видимых элементов (текста, картинок) содержится и
дополнительная разметка:

    теги с технической информацией;
    теги, разделяющие страницу на структурные и смысловые блоки.

Основная структура HTML-страницы

Первым тегом в коде должен быть <!DOCTYPE html>: он сообщает браузеру, что
страница написана на языке HTML 5-й версии (это самая свежая версия HTML).
Версия языка в теге явно не указывается, и именно по этому признаку браузер
понимает, что применена пятая версия (таковы причуды этого стандарта).

Тег <html lang="ru"> </html>: весь HTML-код страницы должен содержаться внутри
этого тега. Атрибут lang указывает, что страница написана на русском языке.

Тег <head> </head> содержит служебную информацию. Содержимое этого тега не видно
пользователю.

<body></body> — тело HTML-страницы; именно здесь размещается содержимое, которое
будет показано пользователю.

	<!DOCTYPE html> <!-- Это информация для браузера: «Страница написана на HTML5!» -->
	<html lang="ru"> <!-- Весь HTML-код должен быть внутри тега <html> -->
	  <head>
	  <!-- Здесь служебная информация, она не видна пользователю -->
	  </head>
	  <body>
	  <!-- Здесь содержимое страницы, видимое пользователю -->
	  </body>
	</html> 

Невидимая голова сайта: тег <head>

В теге <head> размещаются инструкции для браузера, поисковых систем и других
сторонних сервисов; здесь описывают, какая кодировка символов используется в
документе, что следует показать при репосте страницы в соцсетях, как она должна
выглядеть в поисковой выдаче и многое другое.

Самый простой вариант заполненного тега <head> будет выглядеть так:

	<head>
	  <!-- На странице используется кодировка utf-8 -->
	  <meta charset="utf-8">
	  <!-- Краткий анонс страницы -->
	  <meta name="description" content="Краткое описание страницы">
	  <!-- Этот заголовок будет показан как название вкладки браузера -->
	  <title>Заголовок для отображения в названии вкладки</title>
	  <!-- Иконка сайта, будет показана на вкладке браузера -->
	  <link rel="icon" href="fav.ico" type="image">
	</head> 

Эти инструкции называются метаданные (то есть «данные о данных»).
Они заключены внутри мета-тегов. Мета-теги не обязательны, в большинстве
случаев страница будет работать и без них, но без мета-тегов всегда хуже,
чем с ними.

Кракозябрам — бой! meta charset

Одиночный метатег <meta charset="utf-8"> подключает к HTML-документу алфавиты
всех живых языков Земли. Без него браузер может неверно отобразить иероглифы,
буквы кириллицы и вообще символы, не входящие в базовый латинский алфавит.

скрин_10.jpg

Знакомая картина? Верстальщик забыл указать кодировку в meta charset,
браузер попытался сам подобрать подходящую — но ошибся. В результате
страница захвачена кракозябрами.

Расскажи мне о себе: meta description

Назначение description — описать содержимое страницы и убедить пользователя
перейти на неё. Содержимое тега meta description предназначено для показа в
результатах поиска (впрочем, иногда поисковики выбирают для анонса страницы
какой-то другой фрагмент текста).

скрин_11.jpg
скрин_12.jpg

Заголовок, но другой: title

Назначение тега <title> проще всего показать с помощью скриншота: содержимое
этого мета-тега выводится на заголовок вкладки браузера.

скрин_13.jpg

Картинка мелкая, но полезная: favicon

А вот в закладке браузера, рядом с заголовком, притаилась маленькая
картинка-favicon. Она подключается с помощью тега <link>, содержащего
ссылку на внешний файл, указание типа и предназначения подключаемого файла.

скрин_14.jpg

	<link rel="icon" href="fav.ico" type="image"> 

Изначально для иконок использовали файлы в формате .ico, но современные
браузеры предпочитают изображения в формате .png. Чтобы угодить им всем
— подключают набор из иконок разных размеров для разных браузеров:

	<link rel="icon" href="fav.ico" type="image">
	<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
	<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
	<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
	<link rel="manifest" href="/site.webmanifest">
	<meta name="msapplication-TileColor" content="#da532c">
	<meta name="theme-color" content="#ffffff"> 

Сделать иконки — работа дизайнера и верстальщика. Бэкендеры обычно получают
готовый набор файлов.

В <head> может быть размещена и другая информация: перечень метатегов довольно
велик. По ходу курса мы ещё вернёмся к ним.

Тег <body>: тело страницы

В этом теге хранится весь код, который предназначен для отображения на странице.

Обычно тело страницы разделяют на три-четыре основные части:

<header></header> (англ. header, «верхний колонтитул») — верхняя часть,
«шапка сайта». Содержимое этого блока зависит от дизайна; обычно в нём размещают
логотип, телефоны, навигацию.

<nav></nav> (от англ. navigation, «навигация»): в этом теге размещают навигацию
по сайту («меню сайта»). Этот тег может быть размещён в любой части страницы.

<main></main> (англ. main, «основной, главный») — основная содержательная часть
страницы. В ней могут содержаться более мелкие смысловые блоки:

    блоки <article></article> (англ. «статья»);
    разделы <section></section> (англ. «секция, раздел»);
    структурные блоки <div></div>.

<aside></aside> (англ. aside, «помимо»): этот блок предназначен для отображения
дополнительной информации, косвенно связанной с основным содержимым страницы.
Иногда <aside> включают в другие блоки, если в этом есть необходимость.

<footer></footer> (англ. footer, «нижний колонтитул», или «подвал сайта»)
— в этом теге обычно размещают всевозможную дополнительную информацию о сайте:
год создания, копирайты, контакты, иногда здесь же дублируют навигацию или
размещают ссылки на дополнительные страницы.

скрин_15.jpg

Приведённая схема условна, структура страницы может быть самой разной:
aside может быть справа, слева или ниже блока main, или его может не быть
вовсе; блоков навигации nav может быть несколько — из этого конструктора
можно собирать любые комбинации.

Всех их вместе соберём

На новом уровне знаний разметка HTML-страницы будет выглядеть так:

	<!DOCTYPE html>
	<html>
	  <head>
		<meta charset="utf-8">
		<meta name="description" content="Краткое описание страницы">
		<title>Заголовок для отображения в названии вкладки</title>
		<link rel="icon" href="fav.ico" type="image">
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
		<link rel="manifest" href="/site.webmanifest">
		<meta name="msapplication-TileColor" content="#da532c">
		<meta name="theme-color" content="#ffffff">
	  </head>
	  <body>
		<header>
			Верхняя часть страницы: логотип, контакты
		  <nav>
			Меню (навигация)
		  </nav>
		</header>
		<main>
		  Основное содержимое страницы
		</main>
		<footer>
		  Подвал
		</footer>
	  </body>
	</html>

Теги header, main, footer, nav, aside и div отличаются от тех, с которыми
вы познакомились в прошлом уроке: эти теги никак не изменяют содержимое,
которое находится в них. Они служат лишь для структурирования содержимого
страницы, для разделения кода на смысловые блоки.

Такая разметка приносит пользу всем — и разработчикам, и пользователям,
и поисковым машинам.

Пользователям с ограниченными способностями такое структурирование помогает
ориентироваться на странице (системы озвучивания помогают незрячим переходить
по смысловым блокам страницы); разработчику-фронтендеру удобнее работать со
структурированным кодом; поисковому роботу меньше забот — он с удовольствием
прочтёт блок main: ему интереснее содержательная часть страницы, чем
повторяющиеся на всех страницах сайта блоки header и footer.

С технической точки зрения без этих тегов можно и обойтись и использовать
везде div, ошибки не будет. Но вёрстка на основе смысловых блоков
(«семантическая вёрстка») даёт выигрыш как в удобстве разработки, так и в
качестве страниц.

Используйте теги по назначению, тогда вас полюбят и пользователи, и поисковые
системы.

